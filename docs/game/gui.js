"use strict";class Ui{constructor(){this.elements=[]}addElement(t){return t.parent=this,t.id=this.elements.length,this.elements.push(t),t.id}draw(){for(const t of this.elements)t.draw()}}class Button{constructor(t,i,s,e,h,n){this.imageTag=h,this.x=t,this.y=i,this.width=s,this.height=e,this.callback=n,this.pressed=!1,this.hovered=!1,this.parent={},this.id=0,document.addEventListener("mousedown",t=>{t.clientX>=this.x&&t.clientY>=this.y&&t.clientX<=this.x+this.width&&t.clientY<=this.y+this.height&&(this.pressed=!0)}),document.addEventListener("mousemove",t=>{this.hovered=t.clientX>=this.x&&t.clientY>=this.y&&t.clientX<=this.x+this.width&&t.clientY<=this.y+this.height}),document.addEventListener("mouseup",t=>{this.pressed&&t.clientX>=this.x&&t.clientY>=this.y&&t.clientX<=this.x+this.width&&t.clientY<=this.y+this.height&&"function"==typeof this.callback&&this.callback(),this.pressed=!1})}draw(){canvasContext.drawImage(this.imageTag,this.x,this.y,this.width,this.height)}}class Dragable{constructor(t,i,s,e,h,n){this.imageTag=h,this.x=t,this.y=i,this.width=s,this.height=e,this.callback=n,this.draging=!1,this.offsetX=0,this.offsetY=0,this.parent={},this.id=0,document.addEventListener("mousedown",t=>{t.clientX>=this.x&&t.clientY>=this.y&&t.clientX<=this.x+this.width&&t.clientY<=this.y+this.height&&(this.offsetX=this.x-t.clientX,this.offsetY=this.y-t.clientY,this.draging=!0)}),document.addEventListener("mousemove",t=>{this.draging&&(this.x=t.clientX+this.offsetX,this.y=t.clientY+this.offsetY)}),document.addEventListener("mouseup",t=>{this.draging&&"function"==typeof this.callback&&this.callback(t.clientX,t.clientY),this.draging=!1})}draw(){canvasContext.drawImage(this.imageTag,this.x,this.y,this.width,this.height)}}
